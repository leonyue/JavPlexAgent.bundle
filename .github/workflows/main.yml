name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build_linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 2.7
          architecture: x86
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
      - name: Setup dependencies
        run: pip install -r requirements.txt -r requirements_dev.txt
      - name: Lint with flake8
        continue-on-error: true
        run: flake8 src --max-line-length=200 --statistics --show-source
      - name: Test with pytest
        continue-on-error: true
        run: pytest --cov-config=.coveragerc --cov-report=xml --cov=src src
        env:
          PYTHONPATH: src:libs
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        continue-on-error: true
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.xml
          flags: unittests
          name: codecov-umbrella
      - name: Build
        run: python build.py -a
      - name: Archive artifacts
        uses: kittaakos/upload-artifact-as-is@v0
        with:
          path: outputs

  build_macos:
    runs-on: macos-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 2.7
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-pip
      - name: Fix X11 issue
        run: ln -s $(xcode-select -p)/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/Tk.framework/Versions/8.5/Headers/X11 /usr/local/include/X11
      - name: Setup dependencies
        run: pip install -r requirements.txt -r requirements_dev.txt
      - name: Lint with flake8
        continue-on-error: true
        run: flake8 src --max-line-length=200 --statistics --show-source
      - name: Test with pytest
        continue-on-error: true
        run: pytest --cov-config=.coveragerc --cov-report=xml --cov=src src
        env:
          PYTHONPATH: src:libs
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        continue-on-error: true
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.xml
          flags: unittests
          name: codecov-umbrella
      - name: Build
        run: python build.py -a
      - name: Archive artifacts
        uses: kittaakos/upload-artifact-as-is@v0
        with:
          path: outputs

  build_windows:
    runs-on: windows-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Install Visual C++ for Python 2.7
        if: runner.os == 'Windows'
        run: choco install vcpython27 -f -y
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 2.7
          architecture: x86
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip
      - name: Setup dependencies
        run: pip install -r requirements.txt -r requirements_dev.txt
      - name: Lint with flake8
        continue-on-error: true
        run: flake8 src --max-line-length=200 --statistics --show-source
      - name: Test with pytest
        continue-on-error: true
        run: pytest --cov-config=.coveragerc --cov-report=xml --cov=src src
        env:
          PYTHONPATH: src:libs
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        continue-on-error: true
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.xml
          flags: unittests
          name: codecov-umbrella
      - name: Build
        run: python build.py -a
      - name: Archive artifacts
        uses: kittaakos/upload-artifact-as-is@v0
        with:
          path: outputs
