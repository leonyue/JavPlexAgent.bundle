name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build_linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Cache pyenv
        id: cache-pyenv
        uses: actions/cache@v2
        with:
          path: ~/.pyenv
          key: ${{ runner.os }}-pyenv-v2.7.18
      - name: Install pyenv
        if: steps.cache-pyenv.outputs.cache-hit != 'true'
        run: git clone https://github.com/pyenv/pyenv.git ~/.pyenv
      - name: Add pyenv to path
        run: echo "~/.pyenv/bin:~/.pyenv/shims" >> $GITHUB_PATH
      - name: Install Python 2.7.18 with ucs2
        if: steps.cache-pyenv.outputs.cache-hit != 'true'
        run: pyenv install 2.7.18
        env:
          PYTHON_CONFIGURE_OPTS: --enable-unicode=ucs2
      - name: Make sure the Python compiled is used
        if: steps.cache-pyenv.outputs.cache-hit != 'true'
        run: pyenv global 2.7.18
      - name: Make sure to have the latest pip
        run: python -m pip install --upgrade pip
      - name: Setup dependencies
        run: pip install -r requirements.txt -r requirements_dev.txt
      - name: Patch ImageFile in PIL
        run: python build_patch.py
      - name: Lint with flake8
        run: flake8 src --max-line-length=200 --statistics --show-source
      - name: Test with pytest
        run: pytest --cov-config=.coveragerc --cov-report=xml --cov=src src
        env:
          PYTHONPATH: src:libs
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        continue-on-error: true
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.xml
          flags: unittests
          name: codecov-umbrella
      - name: Build
        run: python build.py -a
      - name: Archive artifacts
        uses: kittaakos/upload-artifact-as-is@v0
        with:
          path: outputs

  build_macos:
    runs-on: macos-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Setup Python 2.7
        uses: actions/setup-python@v2
        with:
          python-version: 2.7
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-pip
      - name: Fix X11 issue
        run: ln -s $(xcode-select -p)/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/Tk.framework/Versions/8.5/Headers/X11 /usr/local/include/X11
      - name: Setup dependencies
        run: pip install -r requirements.txt -r requirements_dev.txt
      - name: Patch ImageFile in PIL
        run: python build_patch.py
      - name: Lint with flake8
        run: flake8 src --max-line-length=200 --statistics --show-source
      - name: Test with pytest
        run: pytest --cov-config=.coveragerc --cov-report=xml --cov=src src
        env:
          PYTHONPATH: src:libs
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        continue-on-error: true
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.xml
          flags: unittests
          name: codecov-umbrella
      - name: Build
        run: python build.py -a
      - name: Archive artifacts
        uses: kittaakos/upload-artifact-as-is@v0
        with:
          path: outputs

  build_windows:
    runs-on: windows-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Cache choco
        uses: actions/cache@v2
        with:
          path: ~\AppData\Local\Temp\chocolatey
          key: ${{ runner.os }}-choco
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip
      - name: Install Visual C++ for Python 2.7
        if: runner.os == 'Windows'
        run: choco install vcpython27 -f -y
      - name: Setup Python 2.7 x86
        uses: actions/setup-python@v2
        with:
          python-version: 2.7
          architecture: x86
      - name: Setup dependencies
        run: pip install -r requirements.txt -r requirements_dev.txt
      - name: Patch PIL
        run: python build_patch.py
      - name: Lint with flake8
        run: flake8 src --max-line-length=200 --statistics --show-source
      - name: Test with pytest
        run: pytest --cov-config=.coveragerc --cov-report=xml --cov=src src
        env:
          PYTHONPATH: src;libs
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        continue-on-error: true
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.xml
          flags: unittests
          name: codecov-umbrella
      - name: Build
        run: python build.py -a
      - name: Archive artifacts
        uses: kittaakos/upload-artifact-as-is@v0
        with:
          path: outputs
